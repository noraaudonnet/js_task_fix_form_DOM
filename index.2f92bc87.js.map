{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAa,SAAS,gBAAgB,CAAC,W,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAE7C,SAAS,EAAU,CAAI,EAGrB,IAAK,IAFD,EAAS,GAEJ,EAAI,EAAG,EAAI,EAAK,MAAM,CAAE,IAAK,CACpC,IAAM,EAAO,CAAI,CAAC,EAAE,AAEhB,AAAM,CAAA,IAAN,EACF,GAAU,EAAK,WAAW,GAEtB,IAAS,EAAK,WAAW,GAC3B,GAAU,IAAM,EAEhB,GAAU,CAGhB,CAEA,OAAO,CACT,CAEA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,MAAM,CAAE,IAAK,CACtC,IAAM,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAG,cAClB,EAAM,WAAW,CAAG,EAAU,CAAM,CAAC,EAAE,CAAC,IAAI,EAC5C,EAAM,YAAY,CAAC,MAAO,CAAM,CAAC,EAAE,CAAC,EAAE,EAEtC,CAAM,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,GAC/B,CAAM,CAAC,EAAE,CAAC,WAAW,CAAG,EAAU,CAAM,CAAC,EAAE,CAAC,IAAI,CAClD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar inputs = _to_consumable_array(document.querySelectorAll(\"input\"));\nfunction normalise(text) {\n    var result = \"\";\n    for(var i = 0; i < text.length; i++){\n        var char = text[i];\n        if (i === 0) result += char.toUpperCase();\n        else if (char === char.toUpperCase()) result += \" \" + char;\n        else result += char;\n    }\n    return result;\n}\nfor(var i = 0; i < inputs.length; i++){\n    var label = document.createElement(\"label\");\n    label.className = \"field-label\";\n    label.textContent = normalise(inputs[i].name);\n    label.setAttribute(\"for\", inputs[i].id);\n    inputs[i].parentElement.append(label);\n    inputs[i].placeholder = normalise(inputs[i].name);\n}\n\n//# sourceMappingURL=index.2f92bc87.js.map\n","'use strict';\n\nconst inputs = [...document.querySelectorAll('input')];\n\nfunction normalise(text) {\n  let result = '';\n\n  for (let i = 0; i < text.length; i++) {\n    const char = text[i];\n\n    if (i === 0) {\n      result += char.toUpperCase();\n    } else {\n      if (char === char.toUpperCase()) {\n        result += ' ' + char;\n      } else {\n        result += char;\n      }\n    }\n  }\n\n  return result;\n}\n\nfor (let i = 0; i < inputs.length; i++) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.textContent = normalise(inputs[i].name);\n  label.setAttribute('for', inputs[i].id);\n\n  inputs[i].parentElement.append(label);\n  inputs[i].placeholder = normalise(inputs[i].name);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","inputs","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","normalise","text","result","char","toUpperCase","label","createElement","className","textContent","setAttribute","id","parentElement","append","placeholder"],"version":3,"file":"index.2f92bc87.js.map"}